{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/about/about.ts","../../src/pages/contact/contact.ts","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/pages/connect4/connect4a.ts","../../src/pages/connect4/gamestate.ts","../../src/pages/connect4/gameplay.ts","../../src/pages/connect4/monte-carlo.ts","../../src/pages/connect4/monte-carlo-node.ts","../../src/app/app.component.ts","../../src/pages/connect4/connect4.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 109;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 109\n// module chunks = 1","var map = {\n\t\"../pages/connect4/connect4.module\": [\n\t\t278,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 151;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 151\n// module chunks = 1","import { Connect4Page } from './../connect4/connect4';\r\nimport { Component } from '@angular/core';\r\n\r\nimport { AboutPage } from '../about/about';\r\nimport { ContactPage } from '../contact/contact';\r\nimport { HomePage } from '../home/home';\r\n\r\n@Component({\r\n  templateUrl: 'tabs.html'\r\n})\r\nexport class TabsPage {\r\n\r\n  tab1Root = HomePage;\r\n  tab2Root = AboutPage;\r\n  tab3Root = Connect4Page;\r\n  tab4Root = ContactPage;\r\n\r\n  constructor() {\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\n\r\n@Component({\r\n  selector: 'page-about',\r\n  templateUrl: 'about.html'\r\n})\r\nexport class AboutPage {\r\n\r\n  constructor(public navCtrl: NavController) {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","import { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\n\r\n@Component({\r\n  selector: 'page-contact',\r\n  templateUrl: 'contact.html'\r\n})\r\nexport class ContactPage {\r\n\r\n  constructor(public navCtrl: NavController) {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.ts","import { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\n\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html'\r\n})\r\nexport class HomePage {\r\n\r\n  constructor(public navCtrl: NavController) {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\r\nimport { MyApp } from './app.component';\r\n\r\nimport { AboutPage } from '../pages/about/about';\r\nimport { ContactPage } from '../pages/contact/contact';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { TabsPage } from '../pages/tabs/tabs';\r\n\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { Connect4Page } from '../pages/connect4/connect4';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    AboutPage,\r\n    ContactPage,\r\n    HomePage,\r\n    HomePage,\r\n    Connect4Page,\r\n    TabsPage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(MyApp)\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    AboutPage,\r\n    ContactPage,\r\n    Connect4Page,\r\n    HomePage,\r\n    TabsPage\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","\r\nimport { GameState } from \"./gamestate\";\r\nimport { GamePlay } from \"./gameplay\";\r\nimport 'rxjs/add/operator/map';\r\n\r\nconst N_ROWS = 6;\r\nconst N_COLS = 7;\r\n\r\nconst boardPrototype =   [ [0,0,0,0,0,0,0],\r\n                           [0,0,0,0,0,0,0],\r\n                           [0,0,0,0,0,0,0],\r\n                           [0,0,0,0,0,0,0],\r\n                           [0,0,0,0,0,0,0],\r\n                           [0,0,0,0,0,0,0] ];\r\n\r\nconst checkPrototype = [ [0,0,0,0,0,0,0,0,0],\r\n                         [0,0,0,0,0,0,0,0,0],\r\n                         [0,0,0,0,0,0,0,0,0],\r\n                         [0,0,0,0,0,0,0,0,0],\r\n                         [0,0,0,0,0,0,0,0,0],\r\n                         [0,0,0,0,0,0,0,0,0],\r\n                         [0,0,0,0,0,0,0,0,0] ];\r\n\r\n// Class representing the game.\r\nexport class GameC4 {\r\n\r\n  // Generate and return the initial game state.\r\n  public start() {\r\n    let newBoard = boardPrototype.map((row) => row.slice());\r\n    return new GameState([], newBoard, 1);\r\n  }\r\n\r\n\r\n  // Advance the given state and return it.\r\n  nextGameState(state: any, play: any) {\r\n    let newHistory = state.playHistory.slice(); // 1-deep copy\r\n    newHistory.push(play);\r\n    let newBoard = state.board.map((row: any) => row.slice());\r\n    newBoard[play.row][play.col] = state.player;\r\n    let newPlayer = -state.player;\r\n\r\n    return new GameState(newHistory, newBoard, newPlayer);\r\n  }\r\n\r\n  \r\n\r\n  // Return the current player's legal plays from given state.\r\n  legalPlays(state: any) {\r\n    let legalPlays = [];\r\n    for (let col = 0; col < N_COLS; col++) {\r\n      for (let row = N_ROWS - 1; row >= 0; row--) {\r\n        if (state.board[row][col] === 0) {\r\n          legalPlays.push(new GamePlay(row, col));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return legalPlays;\r\n  }\r\n\r\n\r\n  \r\n  // Return the winner of the game.\r\n  winner(state: any) {\r\n\r\n    // if board is full, there's no winner\r\n    if (!isNaN(state.board[0].reduce(\r\n      (acc: any, cur: any) => cur === 0 ? NaN : acc + cur))\r\n    ) {\r\n      return 0;\r\n    }\r\n\r\n    // one board for each possible winning run orientation\r\n    let checkBoards = new Map();\r\n    checkBoards.set(\"horiz\", checkPrototype.map((row) => row.slice()));\r\n    checkBoards.set(\"verti\", checkPrototype.map((row) => row.slice()));\r\n    checkBoards.set(\"ldiag\", checkPrototype.map((row) => row.slice()));\r\n    checkBoards.set(\"rdiag\", checkPrototype.map((row) => row.slice()));\r\n\r\n    // iterate over the board\r\n    for (let row = 0; row < N_ROWS; row++) {\r\n      for (let col = 0; col < N_COLS; col++) {\r\n        let cell = state.board[row][col];\r\n        for (let [key, val] of checkBoards) {\r\n\r\n          // accumulator\r\n          let acc;\r\n          switch(key) {\r\n            case \"horiz\": acc = val[row + 1][col]; // left\r\n            break;\r\n            case \"verti\": acc = val[row][col + 1]; // top\r\n            break;\r\n            case \"ldiag\": acc = val[row][col]; // top left\r\n            break;\r\n            case \"rdiag\": acc = val[row][col + 2]; // top right\r\n            break;\r\n          }\r\n\r\n          val[row + 1][col + 1] = cell;\r\n          if (cell < 0 && acc < 0 || cell > 0 && acc > 0) {\r\n            val[row + 1][col + 1] += acc;\r\n          }\r\n          if (val[row + 1][col + 1] === 4) { return 1; }\r\n          if (val[row + 1][col + 1] === -4) { return -1; }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/connect4/connect4a.ts","\r\n/** Class representing a game state. */\r\nexport class GameState {\r\n\r\n    playHistory: any;\r\n    board: any;\r\n    player: any;\r\n\r\n    constructor(playHistory: any, board: any, player: any) {\r\n        this.playHistory = playHistory;\r\n        this.board = board;\r\n        this.player = player;\r\n    }\r\n\r\n    isPlayer(player: any) {\r\n        return (player === this.player);\r\n    }\r\n\r\n    hash() {\r\n        return JSON.stringify(this.playHistory);\r\n    }\r\n\r\n    // Note: If hash uses board, multiple parents possible\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/connect4/gamestate.ts","'use strict';\r\n\r\n/** Class representing a state transition. */\r\nexport class GamePlay {\r\n\r\n    row: any = false;\r\n    col: any = false;\r\n\r\n    constructor(row: any, col: any) {\r\n        this.row = row;\r\n        this.col = col;\r\n    }\r\n\r\n    hash() {\r\n        return this.row.toString() + \",\" + this.col.toString();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/connect4/gameplay.ts","import { MonteCarloNode } from \"./monte-carlo-node\";\r\n\r\nexport class MonteCarlo {\r\n\r\n  game: any = false;\r\n  UCB1ExploreParam: any = false;\r\n  nodes: Map<string, MonteCarloNode>;\r\n\r\n  constructor(game: any, UCB1ExploreParam = 2) {\r\n    this.game = game;\r\n    this.UCB1ExploreParam = UCB1ExploreParam;\r\n    this.nodes = new Map(); // map: State.hash() => MonteCarloNode\r\n  }\r\n\r\n\r\n  /** If given state does not exist, create dangling node. */\r\n  makeNode(state: any) {\r\n\r\n    if (!this.nodes.has(state.hash())) {\r\n\r\n      let unexpandedPlays = this.game.legalPlays(state).slice();\r\n      let node = new MonteCarloNode(null, null, state, unexpandedPlays);\r\n\r\n      this.nodes.set(state.hash(), node);\r\n    }\r\n  }\r\n\r\n  /** From given state, repeatedly run MCTS to build statistics. */\r\n  runSearch(state: any, timeout = 3) {\r\n\r\n    this.makeNode(state);\r\n\r\n    let end = Date.now() + timeout * 1000;\r\n    while (Date.now() < end) {\r\n\r\n      let node = this.select(state);\r\n      let winner = this.game.winner(node.state);\r\n\r\n      if (node.isLeaf() === false && winner === null) {\r\n        node = this.expand(node);\r\n        winner = this.simulate(node);\r\n      }\r\n      this.backpropagate(node, winner);\r\n    }\r\n  }\r\n\r\n\r\n  /** Phase 1, Selection: Select until not fully expanded OR leaf */\r\n  select(state: any) {\r\n\r\n    let node: any = this.nodes.get(state.hash());\r\n    while(node.isFullyExpanded() && !node.isLeaf()) {\r\n      let plays = node.allPlays();\r\n      let bestPlay;\r\n      let bestUCB1 = -Infinity;\r\n      for (let play of plays) {\r\n        let childUCB1 = node.childNode(play).getUCB1(this.UCB1ExploreParam);\r\n        if (childUCB1 > bestUCB1) {\r\n          bestPlay = play;\r\n          bestUCB1 = childUCB1;\r\n        }\r\n      }\r\n      node = node.childNode(bestPlay);\r\n    }\r\n    return node;\r\n  }\r\n\r\n  /** Phase 2, Expansion: Expand a random unexpanded child node */\r\n  expand(node: any) {\r\n\r\n    let plays = node.unexpandedPlays();\r\n    let index = Math.floor(Math.random() * plays.length);\r\n    let play = plays[index];\r\n    let childState = this.game.nextGameState(node.state, play);\r\n    let childUnexpandedPlays = this.game.legalPlays(childState);\r\n    let childNode = node.expand(play, childState, childUnexpandedPlays);\r\n\r\n    this.nodes.set(childState.hash(), childNode);\r\n\r\n    return childNode;\r\n    // return childNode\r\n  }\r\n\r\n  /** Phase 3, Simulation: Play game to terminal state, return winner */\r\n  simulate(node: any) {\r\n\r\n    let state = node.state;\r\n    let winner = this.game.winner(state);\r\n\r\n    while (winner === null) {\r\n      let plays = this.game.legalPlays(state);\r\n      let play = plays[Math.floor(Math.random() * plays.length)];\r\n      state = this.game.nextGameState(state, play);\r\n      winner = this.game.winner(state);\r\n    }\r\n\r\n    return winner;\r\n    // return winner\r\n  }\r\n\r\n  /** Phase 4, Backpropagation: Update ancestor statistics */\r\n  backpropagate(node: any, winner: any) {\r\n    while (node !== null) {\r\n      node.n_plays += 1;\r\n      // Parent's choice\r\n      if (node.state.isPlayer(-winner)) {\r\n        node.n_wins += 1;\r\n      }\r\n      node = node.parent;\r\n    }\r\n  }\r\n\r\n  /** Get the best move from available statistics. */\r\n  bestPlay(state: any, policy = \"robust\") {\r\n\r\n    this.makeNode(state);\r\n\r\n    // If not all children are expanded, not enough information\r\n    if (this.nodes.get(state.hash()).isFullyExpanded() === false) {\r\n      throw new Error(\"Not enough information!\");\r\n    }\r\n\r\n    let node: any = this.nodes.get(state.hash());\r\n    let allPlays = node.allPlays();\r\n    let bestPlay;\r\n\r\n    // Most visits (robust child)\r\n    if (policy === \"robust\") {\r\n      let max = -Infinity;\r\n      for (let play of allPlays) {\r\n        let childNode = node.childNode(play);\r\n        if (childNode.n_plays > max) {\r\n          bestPlay = play;\r\n          max = childNode.n_plays;\r\n        }\r\n      }\r\n    } else if (policy === \"max\") {\r\n      let max = -Infinity;\r\n      for (let play of allPlays) {\r\n        let childNode = node.childNode(play);\r\n        let ratio = childNode.n_wins / childNode.n_plays;\r\n        if (ratio > max) {\r\n          bestPlay = play;\r\n          max = ratio;\r\n        }\r\n      }\r\n    }\r\n\r\n    return bestPlay;\r\n  }\r\n\r\n  getStats(state: any) {\r\n    let node: any = this.nodes.get(state.hash());\r\n    let stats = {\r\n      n_plays: node.n_plays,\r\n      n_wins: node.n_wins,\r\n      children: []\r\n    };\r\n\r\n    for (let child of node.children.values()) {\r\n      if (child.node === null) {\r\n        stats.children.push({\r\n          play: child.play,\r\n          n_plays: null,\r\n          n_wins: null\r\n        });\r\n      } else {\r\n        stats.children.push({\r\n          play: child.play,\r\n          n_plays: child.node.n_plays,\r\n          n_wins: child.node.n_wins\r\n        });\r\n      }\r\n    }\r\n    return stats;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/connect4/monte-carlo.ts","\r\n/** Class representing a node in the search tree. */\r\nexport class MonteCarloNode {\r\n\r\n  play: any = false;\r\n  state: any = false;\r\n  n_plays = 0;\r\n  n_wins = 0;\r\n\r\n  parent: any = false;\r\n  children: any = false;\r\n\r\n  constructor(parent: any, play: any, state: any, unexpandedPlays: any) {\r\n\r\n    this.play = play;\r\n    this.state = state;\r\n\r\n    // Monte Carlo stuff\r\n    this.n_plays = 0;\r\n    this.n_wins = 0;\r\n\r\n    // Tree stuff\r\n    this.parent = parent;\r\n    this.children = new Map();\r\n\r\n    for (let uplay of unexpandedPlays) {\r\n      this.children.set(uplay.hash(), { play: uplay, node: null });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the MonteCarloNode corresponding to the given play.\r\n   * @param {number} play - The play leading to the child node.\r\n   * @return {MonteCarloNode} The child node corresponding to the play given.\r\n   */\r\n  childNode(play: any) {\r\n    let child = this.children.get(play.hash());\r\n    if (child === undefined) {\r\n      throw new Error('No such play!');\r\n    } else if (child.node === null) {\r\n      throw new Error(\"Child is not expanded!\");\r\n    }\r\n    return child.node;\r\n  }\r\n\r\n  /**\r\n   * Expand the specified child play and return the new child node.\r\n   * Add the node to the array of children nodes.\r\n   * Remove the play from the array of unexpanded plays.\r\n   * @param {Play} play - The play to expand.\r\n   * @param {State} childState - The child state corresponding to the given play.\r\n   * @param {Play[]} unexpandedPlays - The given child's unexpanded child plays; typically all of them.\r\n   * @return {MonteCarloNode} The new child node.\r\n   */\r\n  expand(play: any, childState: any, unexpandedPlays: any) {\r\n    if (!this.children.has(play.hash())) { throw new Error(\"No such play!\"); }\r\n    let childNode = new MonteCarloNode(this, play, childState, unexpandedPlays);\r\n    this.children.set(play.hash(), { play: play, node: childNode });\r\n    return childNode;\r\n  }\r\n\r\n  /**\r\n   * Get all legal plays from this node.\r\n   * @return {Play[]} All plays.\r\n   */\r\n  allPlays() {\r\n    let ret = [];\r\n    for (let child of this.children.values()) {\r\n      ret.push(child.play);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * Get all unexpanded legal plays from this node.\r\n   * @return {Play[]} All unexpanded plays.\r\n   */\r\n  unexpandedPlays() {\r\n    let ret = [];\r\n    for (let child of this.children.values()) {\r\n      if (child.node === null) { ret.push(child.play); }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * Whether this node is fully expanded.\r\n   * @return {boolean} Whether this node is fully expanded.\r\n   */\r\n  isFullyExpanded() {\r\n    for (let child of this.children.values()) {\r\n      if (child.node === null) { return false; }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Whether this node is terminal in the game tree, NOT INCLUSIVE of termination due to winning.\r\n   * @return {boolean} Whether this node is a leaf in the tree.\r\n   */\r\n  isLeaf() {\r\n    if (this.children.size === 0) { return true; } else { return false; }\r\n  }\r\n\r\n  /**\r\n   * Get the UCB1 value for this node.\r\n   * @param {number} biasParam - The square of the bias parameter in the UCB1 algorithm, defaults to 2.\r\n   * @return {number} The UCB1 value of this node.\r\n   */\r\n  getUCB1(biasParam: any) {\r\n    return (this.n_wins / this.n_plays) + Math.sqrt(biasParam * Math.log(this.parent.n_plays) / this.n_plays);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/connect4/monte-carlo-node.ts","import { Component } from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\nimport { TabsPage } from '../pages/tabs/tabs';\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n  rootPage:any = TabsPage;\r\n\r\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\r\n    platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      statusBar.styleDefault();\r\n      splashScreen.hide();\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { GameC4 as Game } from \"./connect4a\";\nimport { MonteCarlo } from \"./monte-carlo\";\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n  selector: 'page-connect4',\n  templateUrl: 'connect4.html',\n})\nexport class Connect4Page {\n\n  items: any;\n  currentPlayer:any;\n  currentWinner:any;\n  theBoard:any;\n  game: Game;\n  mcts: MonteCarlo;\n  state: any;\n  winner: Number;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n    this.currentPlayer = {\n      color: \"\",\n      name: \"\",\n      move: \"\"\n    };\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad Connect4Page');\n  }\n\n  startGame() {\n    this.game = new Game();\n    this.mcts = new MonteCarlo(this.game);\n    this.state = this.game.start();\n    this.winner = this.game.winner(this.state);\n    this.theBoard = this.state.board.map((row: any) => row.map((cell: any) => cell === -1 ? 2 : cell));\n    this.playMove();\n   }\n\n\n\n\n\n   \n   \n   playMove(col?:any) {\n    \n    // From initial state, play games until end\n    if( !this.winner ) {\n      // console.log();\n      // console.log('player: ' + (state.player === 1 ? 1 : 2));\n      // console.log(state.board.map((row: any) => row.map((cell: any) => cell === -1 ? 2 : cell)));\n      this.mcts.runSearch(this.state, 1);\n      let stats = this.mcts.getStats(this.state);\n      // console.log(util.inspect(stats, {showHidden: false, depth: null}));\n      let play = this.mcts.bestPlay(this.state, 'robust');\n\n      // Afficher ces coordonnees dans le board\n      let playerId = this.state.player;\n\n      if( playerId === 1 ) {\n        this.currentPlayer.name = \"Player 2\";\n        this.currentWinner = \"Player 1\";\n        this.currentPlayer.color = \"orange\";\n        \n      } else {\n        this.currentPlayer.name = \"Player 1\";\n        this.currentWinner = \"Player 2\";\n        this.currentPlayer.color = \"purple\";\n\n      }\n\n      if( col !== undefined ) {\n        play.col = \"\"+col;\n        for(let row=0;row<6;row++) {\n          if( this.theBoard[row][col] === 0 ) {             \n            play.row = row;              \n          }\n        }\n      }\n\n      this.state = this.game.nextGameState(this.state, play);\n      this.winner = this.game.winner(this.state);\n\n\n      this.theBoard = this.state.board.map((row: any) => row.map((cell: any) => cell === -1 ? 2 : cell));\n\n\n    } \n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/connect4/connect4.ts"],"sourceRoot":""}